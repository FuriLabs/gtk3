From: =?utf-8?q?Jonas_=C3=85dahl?= <jadahl@gmail.com>
Date: Mon, 6 Apr 2020 12:07:51 +0200
Subject: wayland: Store unconfigured size without margin

We get the unconfigured size request either with or without the shadow
margin already configured, so to get some consistency with the 'saved
size', cut away any potential shadow margin from the size before
storing.

Then when using, add it back, so we always create a configure event with
the correct size.

Bug: https://gitlab.gnome.org/GNOME/gtk/-/issues/2576
Origin: upstream, 3.24.18
---
 gdk/wayland/gdkwindow-wayland.c | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/gdk/wayland/gdkwindow-wayland.c b/gdk/wayland/gdkwindow-wayland.c
index 8e2e023..6c55544 100644
--- a/gdk/wayland/gdkwindow-wayland.c
+++ b/gdk/wayland/gdkwindow-wayland.c
@@ -1149,8 +1149,10 @@ gdk_wayland_window_maybe_configure (GdkWindow *window,
   if (needs_initial_configure (window) &&
       !impl->initial_configure_received)
     {
-      impl->unconfigured_width = width;
-      impl->unconfigured_height = height;
+      impl->unconfigured_width = calculate_width_without_margin (window,
+                                                                 width);
+      impl->unconfigured_height = calculate_height_without_margin (window,
+                                                                   height);
       return;
     }
 
@@ -1676,9 +1678,16 @@ gdk_wayland_window_handle_configure (GdkWindow *window,
     }
   else
     {
+      int unconfigured_width;
+      int unconfigured_height;
+
+      unconfigured_width =
+        calculate_width_with_margin (window, impl->unconfigured_width);
+      unconfigured_height =
+        calculate_height_with_margin (window, impl->unconfigured_height);
       gdk_wayland_window_configure (window,
-                                    impl->unconfigured_width,
-                                    impl->unconfigured_height,
+                                    unconfigured_width,
+                                    unconfigured_height,
                                     impl->scale);
     }
 
