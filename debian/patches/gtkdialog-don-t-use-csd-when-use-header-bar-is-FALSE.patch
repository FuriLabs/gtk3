From 3d530366a7af0494841fef1b473d77e7854beee6 Mon Sep 17 00:00:00 2001
From: Lars Uebernickel <lars.uebernickel@canonical.com>
Date: Wed, 14 May 2014 13:16:43 +0200
Subject: [PATCH 1/3] gtkdialog: don't use csd when use-header-bar is FALSE

https://bugzilla.gnome.org/show_bug.cgi?id=730893
---
 gtk/gtkdialog.c | 63 +++++++++++++++++++++++++++------------------------------
 1 file changed, 30 insertions(+), 33 deletions(-)

Index: gtk+3.0-3.12.2/gtk/gtkdialog.c
===================================================================
--- gtk+3.0-3.12.2.orig/gtk/gtkdialog.c	2014-06-05 13:15:50.106082966 +0200
+++ gtk+3.0-3.12.2/gtk/gtkdialog.c	2014-06-05 13:15:50.102082965 +0200
@@ -214,6 +214,10 @@
                                                           GObject       *child,
                                                           const gchar   *tagname,
                                                           gpointer       user_data);
+static void     gtk_dialog_buildable_add_child           (GtkBuildable  *buildable,
+                                                          GtkBuilder    *builder,
+                                                          GObject       *child,
+                                                          const gchar   *type);
 
 
 enum {
@@ -273,47 +277,17 @@
 }
 
 static void
-update_title (GObject    *dialog,
-              GParamSpec *pspec,
-              GtkWidget  *label)
-{
-  const gchar *title;
-
-  title = gtk_window_get_title (GTK_WINDOW (dialog));
-  gtk_label_set_label (GTK_LABEL (label), title);
-  gtk_widget_set_visible (label, title && title[0]);
-}
-
-static void
 apply_use_header_bar (GtkDialog *dialog)
 {
   GtkDialogPrivate *priv = dialog->priv;
 
   gtk_widget_set_visible (priv->action_area, !priv->use_header_bar);
   gtk_widget_set_visible (priv->headerbar, priv->use_header_bar);
-  if (!priv->use_header_bar)
+  if (priv->use_header_bar)
     {
-      GtkWidget *box = NULL;
-
-      if (gtk_window_get_type_hint (GTK_WINDOW (dialog)) == GDK_WINDOW_TYPE_HINT_DIALOG)
-        {
-          GtkWidget *label;
-
-          box = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
-          gtk_widget_show (box);
-          gtk_widget_set_size_request (box, -1, 16);
-          label = gtk_label_new ("");
-          gtk_widget_set_margin_top (label, 6);
-          gtk_widget_set_margin_bottom (label, 6);
-          gtk_style_context_add_class (gtk_widget_get_style_context (label), "title");
-          gtk_box_set_center_widget (GTK_BOX (box), label);
-          g_signal_connect_object (dialog, "notify::title", G_CALLBACK (update_title), label, 0);
-        }
-
-      gtk_window_set_titlebar (GTK_WINDOW (dialog), box);
+      gtk_window_set_titlebar (GTK_WINDOW (dialog), priv->headerbar);
+      g_signal_connect (priv->action_area, "add", G_CALLBACK (add_cb), dialog);
     }
-  if (priv->use_header_bar)
-    g_signal_connect (priv->action_area, "add", G_CALLBACK (add_cb), dialog);
 }
 
 static void
@@ -719,6 +693,7 @@
   parent_buildable_iface = g_type_interface_peek_parent (iface);
   iface->custom_tag_start = gtk_dialog_buildable_custom_tag_start;
   iface->custom_finished = gtk_dialog_buildable_custom_finished;
+  iface->add_child = gtk_dialog_buildable_add_child;
 }
 
 static gboolean
@@ -1830,6 +1805,28 @@
   g_slice_free (ActionWidgetsSubParserData, parser_data);
 }
 
+static void
+gtk_dialog_buildable_add_child (GtkBuildable  *buildable,
+                                GtkBuilder    *builder,
+                                GObject       *child,
+                                const gchar   *type)
+{
+  GtkDialog *dialog = GTK_DIALOG (buildable);
+  GtkDialogPrivate *priv = dialog->priv;
+
+  if (type == NULL)
+    gtk_container_add (GTK_CONTAINER (buildable), GTK_WIDGET (child));
+
+  /* Don't call gtk_window_set_titlebar() until we know whether we want
+   * traditional titlebars or header bars.
+   */
+  else if (g_str_equal (type, "titlebar"))
+    priv->headerbar = GTK_WIDGET (child);
+
+  else
+    GTK_BUILDER_WARN_INVALID_CHILD_TYPE (buildable, type);
+}
+
 /**
  * gtk_dialog_get_action_area:
  * @dialog: a #GtkDialog
